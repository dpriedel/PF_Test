# This file is part of Extractor_Markup.

# Extractor_Markup is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# Extractor_Markup is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with Extractor_Markup.  If not, see <http://www.gnu.org/licenses/>.

# see link below for make file dependency magic
#
# http://bruno.defraine.net/techtips/makefile-auto-dependencies-with-gcc/
#
MAKE=gmake

BOOSTDIR := /extra/boost/boost-1.76_gcc-11
GCCDIR := /extra/gcc/gcc-11
GTESTDIR := /usr/local/include
DECIMALSRCDIR := /extra/gcc/decNumber
CPP := $(GCCDIR)/bin/g++
GCC := $(GCCDIR)/bin/gcc

# If no configuration is specified, "Debug" will be used
ifndef "CFG"
	CFG := Debug
endif

#	common definitions

OUTFILE := Unit_Test

CFG_INC := -I/home/dpriedel/projects/point_figure/src \
	-I$(GTESTDIR) \
	-I$(BOOSTDIR) \
	-I$(DECIMALSRCDIR)/include \
	-I/usr/local/include/ChartDirector

RPATH_LIB := -Wl,-rpath,$(GCCDIR)/lib64 -Wl,-rpath,$(BOOSTDIR)/lib -Wl,-rpath,/usr/local/lib

SDIR1 := .
SRCS1 := $(SDIR1)/Unit_Test.cpp

SDIR2 := ../point_figure/src
SRCS2 := $(SDIR2)/DDecDouble.cpp  \
		$(SDIR2)/p_f_column.cpp \
		$(SDIR2)/p_f_data.cpp \
		$(SDIR2)/LiveStream.cpp #\
#		$(SDIR2)/PathNameGenerator.cpp \
#		$(SDIR2)/DailyIndexFileRetriever.cpp \
#		$(SDIR2)/FormFileRetriever.cpp

SDIR3 := $(DECIMALSRCDIR)/src
SRCS3 := $(SDIR3)/decDouble.c \
		 $(SDIR3)/decQuad.c \
		 $(SDIR3)/decContext.c

SRCS := $(SRCS1) $(SRCS2) $(SRCS3)

VPATH := $(SDIR1):$(SDIR2):$(SDIR3)

#
# Configuration: Debug
#
ifeq "$(CFG)" "Debug"

OUTDIR := Debug_unit

# NOTE: use libzip NOT libminizip
#
CFG_LIB := -lpthread \
		-lssl -lcrypto \
		-L$(GCCDIR)/lib64 \
		-L$(BOOSTDIR)/lib \
		-lboost_json-mt-x64 \
		-L/usr/local/lib \
		-lgtest -lgtest_main \
		-lfmt \
		-lspdlog \
		-ldate-tz \
		-lchartdir

OBJS1=$(addprefix $(OUTDIR)/, $(addsuffix .o, $(basename $(notdir $(SRCS1)))))
OBJS2=$(addprefix $(OUTDIR)/, $(addsuffix .o, $(basename $(notdir $(SRCS2)))))
OBJS3=$(addprefix $(OUTDIR)/, $(addsuffix .o, $(basename $(notdir $(SRCS3)))))

OBJS=$(OBJS1) $(OBJS2) $(OBJS3)

DEPS=$(OBJS:.o=.d)

COMPILE=$(CPP) -c  -x c++  -O0  -g3 -std=c++20 -DBOOST_ENABLE_ASSERT_HANDLER -D_DEBUG -DSPDLOG_FMT_EXTERNAL -DBOOST_REGEX_STANDALONE  -fPIC -o $@ $(CFG_INC) $< -march=native -MMD -MP
CCOMPILE=$(GCC) -c  -O0  -g3 -D_DEBUG -fPIC -o $@ $(CFG_INC) $< -march=native -MMD -MP
LINK := $(CPP)  -g -o $(OUTFILE) $(OBJS) $(CFG_LIB) -Wl,-E $(RPATH_LIB)
# COMPILE=$(CPP) -c  -x c++  -O0  -g3 -std=c++20 -D NOCERTTEST -DBOOST_ENABLE_ASSERT_HANDLER -D_DEBUG -DSPDLOG_FMT_EXTERNAL -fPIC -fsanitize=address -o $@ $(CFG_INC) $< -march=native -MMD -MP
# LINK := $(CPP)  -g -fsanitize=address  -o $(OUTFILE) $(OBJS) $(CFG_LIB) -Wl,-E $(RPATH_LIB)

endif #	DEBUG configuration

# Build rules
all: $(OUTFILE)

$(OUTDIR)/%.o : %.cpp
	$(COMPILE)

$(OUTDIR)/%.o : %.c
	$(CCOMPILE)

$(OUTFILE): $(OUTDIR) $(OBJS1) $(OBJS2) $(OBJS3)
	$(LINK)

-include $(DEPS)

$(OUTDIR):
	mkdir -p "$(OUTDIR)"

# Rebuild this project
rebuild: cleanall all

# Clean this project
clean:
	rm -f $(OUTFILE)
	rm -f $(OBJS)
	rm -f $(OUTDIR)/*.P
	rm -f $(OUTDIR)/*.d
	rm -f $(OUTDIR)/*.o

# Clean this project and all dependencies
cleanall: clean
